@page "/characters"
@inject IHttpClientFactory clientFactory
@inject RickAndMortyService RickAndMortyService
@inject NavigationManager NavigationManager

<div class="container">
    <div class="form-inline">
        <div class="input-group">
            <input type="text" class="form-control mb-2 mr-sm-2" placeholder="search..." @bind-value="searchQuery">
            <button type="button" ty class="btn btn-success mb-2" @onclick="(() => Search(searchQuery))">Search</button>
            <button type="button" ty class="btn btn-outline-info mb-2" @onclick="(() => Search(string.Empty))">Clear</button>
        </div>
    </div>
</div>

@if (model is null)
{
    <p>fetching data...</p>
}
else if (model.info is null)
{
    <p>nothing found</p>
}
else
{
    <h5>@model.info.count entries, @model.info.pages page(s)</h5>
    <div style="display: flex; justify-content: space-between">
        @if (!string.IsNullOrEmpty(model.info.prev))
        {
            <button @onclick="(() => Prev(model.info))">Previous</button>
        }
        <div></div>
        @if (!string.IsNullOrEmpty(model.info.next))
        {
            <button @onclick="(() => Next(model.info))">Next</button>
        }
    </div>

    <table class="table table-sm table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Status</th>
                <th>Species</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in model.results)
            {
                <tr>
                    <td>@item.id</td>
                    <td>@item.name</td>
                    <td>@item.status</td>
                    <td>@item.species</td>
                    <td><button @onclick="(() => NewThought(item.id))">click</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private CharacterModel model;
    string errorString;
    string searchQuery;
    private List<Result> test;

    protected override async Task OnInitializedAsync()
    {
        model = await RickAndMortyService.GetAllCharacters();
    }

    private async Task Search(string searchQuery)
    {
        model = await RickAndMortyService.SearchCharacter(searchQuery);
    }

    private void NewThought(int id)
    {
        NavigationManager.NavigateTo($"new-notebook/{id}");
    }

    private async Task Next(Info info)
    {
        model = await RickAndMortyService.GoToPage(info.next);
    }

    private async Task Prev(Info info)
    {
        model = await RickAndMortyService.GoToPage(info.prev);
    }
}
